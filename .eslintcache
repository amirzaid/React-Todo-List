[{"C:\\Users\\User\\VSCodeProjects\\react_todo_list\\src\\index.js":"1","C:\\Users\\User\\VSCodeProjects\\react_todo_list\\src\\App.js":"2","C:\\Users\\User\\VSCodeProjects\\react_todo_list\\src\\components\\Form.js":"3","C:\\Users\\User\\VSCodeProjects\\react_todo_list\\src\\components\\Todolist.js":"4","C:\\Users\\User\\VSCodeProjects\\react_todo_list\\src\\components\\Todo.js":"5"},{"size":222,"mtime":1609178850414,"results":"6","hashOfConfig":"7"},{"size":1183,"mtime":1609409568529,"results":"8","hashOfConfig":"7"},{"size":2192,"mtime":1609869660692,"results":"9","hashOfConfig":"7"},{"size":384,"mtime":1609348689082,"results":"10","hashOfConfig":"7"},{"size":1062,"mtime":1609762921964,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"1e3jwaw",{"filePath":"15","messages":"16","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"14"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"C:\\Users\\User\\VSCodeProjects\\react_todo_list\\src\\index.js",[],["26","27"],"C:\\Users\\User\\VSCodeProjects\\react_todo_list\\src\\App.js",["28","29"],"import './App.css';\nimport React, { useState } from 'react';\nimport Form from './components/Form';\nimport Todolist from \"./components/Todolist\";\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <header className='mb-5'>\n        <h1>Todo List</h1>\n      </header>\n      <div className='container'>\n        <Form inputText={inputText} setInputText={setInputText} todos={todos} setTodos={setTodos} />\n        <Todolist todos={todos} setTodos={setTodos} />\n      </div>\n    </div >\n  );\n}\n\nexport default App;\n\n/* Todo style #1 */\n\n{/* <div className='input-group mb-3'>\n  <div className='input-group-text'>\n    <input className='form-check-input' type='checkbox'></input>\n  </div>\n  <div className='card card-body'>Task #1</div>\n</div> */}\n\n/* Todo style #2 */\n\n{/* <div className='mb-3 card card-body'>\n  <div className='form-check'>\n    <input className='form-check-input' type='checkbox' value=''></input>\n    <label className='form-check-label'>\n      Task #2\n                </label>\n    <button type=\"button\" class=\"btn-close\" aria-label=\"Close\"></button>\n  </div>\n</div> */}","C:\\Users\\User\\VSCodeProjects\\react_todo_list\\src\\components\\Form.js",["30"],"import React from 'react';\r\nconst uniqid = require('uniqid');\r\n\r\nvar sorted = false\r\n\r\nconst Form = ({ inputText, setInputText, todos, setTodos }) => {\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value);\r\n    }\r\n\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        if (inputText != '') {\r\n            setTodos([\r\n                ...todos,\r\n                {\r\n                    id: uniqid(),\r\n                    completed: false,\r\n                    text: inputText\r\n                }\r\n            ])\r\n            setInputText('');\r\n        }\r\n    }\r\n\r\n    // Sort todos alphabetically\r\n    const sortTodosHandler = () => {\r\n        let sort_btn = document.querySelector('#sort-btn i')\r\n\r\n        if (sorted) {\r\n            setTodos([...todos.reverse()])\r\n            sorted = false\r\n            sort_btn.classList.remove('fa-sort-up')\r\n            sort_btn.classList.add('fa-sort-down')\r\n        }\r\n        else {\r\n            setTodos([...todos].sort((a, b) => {\r\n                let result = a.text.localeCompare(b.text)\r\n                console.log(result)\r\n                return result\r\n            }))\r\n            sorted = true\r\n            sort_btn.classList.remove('fa-sort-down')\r\n            sort_btn.classList.add('fa-sort-up')\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='form'>\r\n            <form className='mb-5'>\r\n                <div className='input-group has-validation'>\r\n                    <input value={inputText} onChange={inputTextHandler} className='form-control' type='text' required />\r\n                    <button onClick={submitTodoHandler} className='btn btn-primary'>\r\n                        <i className='fas fa-plus-square'></i>\r\n                    </button>\r\n                    <button type='button' onClick={sortTodosHandler} id='sort-btn' className='btn btn-primary'>\r\n                        <i className='fas fa-sort-down'></i>\r\n                    </button>\r\n\r\n                    <div className='invalid-feedback'>\r\n                        Can't be empty\r\n                </div>\r\n                </div>\r\n            </form>\r\n\r\n        </div >\r\n\r\n    )\r\n}\r\n\r\nexport default Form;","C:\\Users\\User\\VSCodeProjects\\react_todo_list\\src\\components\\Todolist.js",[],"C:\\Users\\User\\VSCodeProjects\\react_todo_list\\src\\components\\Todo.js",[],["31","32"],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":27,"column":1,"nodeType":"39","messageId":"40","endLine":32,"endColumn":11},{"ruleId":"37","severity":1,"message":"38","line":36,"column":1,"nodeType":"39","messageId":"40","endLine":44,"endColumn":11},{"ruleId":"41","severity":1,"message":"42","line":13,"column":23,"nodeType":"43","messageId":"44","endLine":13,"endColumn":25},{"ruleId":"33","replacedBy":"45"},{"ruleId":"35","replacedBy":"46"},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["47"],["48"],"no-global-assign","no-unsafe-negation"]